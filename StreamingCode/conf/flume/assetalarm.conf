assetAlarmDev.sources = rabbitmq_source1
assetAlarmDev.channels = file_channel
assetAlarmDev.sinks = sink_to_hdfs

# Define Rabbit Source
assetAlarmDev.sources = rabbitmq_source1
assetAlarmDev.sources.rabbitmq_source1.type = com.aweber.flume.source.rabbitmq.RabbitMQSource
assetAlarmDev.sources.rabbitmq_source1.host = <hostname>
assetAlarmDev.sources.rabbitmq_source1.queue = <queuename>
assetAlarmDev.sources.rabbitmq_source1.username = <username>
assetAlarmDev.sources.rabbitmq_source1.password = <password>
assetAlarmDev.sources.rabbitmq_source1.port = <portno>
assetAlarmDev.sources.rabbitmq_source1.virtual-host = /

assetAlarmDev.sources.rabbitmq_source1.interceptors = customInterceptor
assetAlarmDev.sources.rabbitmq_source1.interceptors.customInterceptor.type = AssetInterceptor.Asset.App$Builder

# HDFS sinks
assetAlarmDev.sinks.sink_to_hdfs.type = hdfs
assetAlarmDev.sinks.sink_to_hdfs.hdfs.fileType = DataStream
assetAlarmDev.sinks.sink_to_hdfs.hdfs.path = <hdfsPath>/assetalarm
assetAlarmDev.sinks.sink_to_hdfs.hdfs.filePrefix = assetalarm
assetAlarmDev.sinks.sink_to_hdfs.hdfs.fileSuffix = .xml
#assetAlarmDev.sinks.sink_to_hdfs.hdfs.batchSize = 1000
assetAlarmDev.sinks.sink_to_hdfs.hdfs.rollSize=134217728
assetAlarmDev.sinks.sink_to_hdfs.hdfs.rollCount=0
assetAlarmDev.sinks.sink_to_hdfs.hdfs.rollInterval=1200

# Use a channel which buffers events in memory
assetAlarmDev.channels.file_channel.type = file
assetAlarmDev.channels.file_channel.checkpointDir = <configDir>/flume/checkpoint/assetalarm
assetAlarmDev.channels.file_channel.dataDirs = <configDir>/flume/dataDir/assetalarm

# Bind the source and sink to the channel
assetAlarmDev.sources.rabbitmq_source1.channels = file_channel
assetAlarmDev.sinks.sink_to_hdfs.channel = file_channel
