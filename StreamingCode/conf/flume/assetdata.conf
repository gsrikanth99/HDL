assetDataDev.sources = rabbitmq_source1
assetDataDev.channels = file_channel
assetDataDev.sinks = sink_to_hdfs

# Define Rabbit Source
assetDataDev.sources = rabbitmq_source1
assetDataDev.sources.rabbitmq_source1.type = com.aweber.flume.source.rabbitmq.RabbitMQSource
assetDataDev.sources.rabbitmq_source1.host = <hostname>
assetDataDev.sources.rabbitmq_source1.queue = <queuename>
assetDataDev.sources.rabbitmq_source1.username = <username>
assetDataDev.sources.rabbitmq_source1.password = <password>
assetDataDev.sources.rabbitmq_source1.port = <portno>
assetDataDev.sources.rabbitmq_source1.virtual-host = /
assetDataDev.sources.rabbitmq_source1.threads = 10

assetDataDev.sources.rabbitmq_source1.interceptors = customInterceptor
assetDataDev.sources.rabbitmq_source1.interceptors.customInterceptor.type = AssetInterceptor.Asset.App$Builder

# HDFS sinks
assetDataDev.sinks.sink_to_hdfs.type = hdfs
assetDataDev.sinks.sink_to_hdfs.hdfs.fileType = DataStream
assetDataDev.sinks.sink_to_hdfs.hdfs.path = <hdfsPath>/assetdata
assetDataDev.sinks.sink_to_hdfs.hdfs.filePrefix = assetdata
assetDataDev.sinks.sink_to_hdfs.hdfs.fileSuffix = .xml
assetDataDev.sinks.sink_to_hdfs.hdfs.rollSize=134217728
assetDataDev.sinks.sink_to_hdfs.hdfs.rollCount=0
assetDataDev.sinks.sink_to_hdfs.hdfs.rollInterval=1200

# Use a channel which buffers events in memory
assetDataDev.channels.file_channel.type = file
assetDataDev.channels.file_channel.checkpointDir = <configDir>/flume/checkpoint/assetdata
assetDataDev.channels.file_channel.dataDirs = <configDir>/flume/dataDir/assetdata

# Bind the source and sink to the channel
assetDataDev.sources.rabbitmq_source1.channels = file_channel
assetDataDev.sinks.sink_to_hdfs.channel = file_channel
