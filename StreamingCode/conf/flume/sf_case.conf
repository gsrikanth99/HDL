sf_case.sources = rabbitmq_case
sf_case.channels = file_channel_case
sf_case.sinks = sink_to_hdfs_case


# Define Rabbit Source

sf_case.sources = rabbitmq_case
sf_case.sources.rabbitmq_case.type = com.aweber.flume.source.rabbitmq.RabbitMQSource
sf_case.sources.rabbitmq_case.host = <hostname>
sf_case.sources.rabbitmq_case.queue = <queuename>
sf_case.sources.rabbitmq_case.username = <username>
sf_case.sources.rabbitmq_case.password = <password>
sf_case.sources.rabbitmq_case.port = <portno>

sf_case.sources.rabbitmq_case.virtual-host = /

sf_case.sources.rabbitmq_case.interceptors = customInterceptor1
sf_case.sources.rabbitmq_case.interceptors.customInterceptor1.type = AssetInterceptor.Case.CaseApp$Builder
# HDFS sinks
sf_case.sinks.sink_to_hdfs_case.type = hdfs
sf_case.sinks.sink_to_hdfs_case.hdfs.fileType = DataStream
sf_case.sinks.sink_to_hdfs_case.hdfs.path = <hdfsPath>/sf_case/
sf_case.sinks.sink_to_hdfs_case.hdfs.filePrefix = sf_case
sf_case.sinks.sink_to_hdfs_case.hdfs.fileSuffix = .xml
#sf_case.sinks.sink_to_hdfs_case.hdfs.batchSize = 1000


sf_case.sinks.sink_to_hdfs_case.hdfs.rollSize=134217728
sf_case.sinks.sink_to_hdfs_case.hdfs.rollCount=0
sf_case.sinks.sink_to_hdfs_case.hdfs.rollInterval=1200


# Use a channel which buffers events in memory
sf_case.channels.file_channel_case.type = file
sf_case.channels.file_channel_case.checkpointDir = <configDir>/flume/checkpoint/sf_case
sf_case.channels.file_channel_case.dataDirs = <configDir>/flume/dataDir/sf_case


# Bind the source and sink to the channel
sf_case.sources.rabbitmq_case.channels = file_channel_case
sf_case.sinks.sink_to_hdfs_case.channel = file_channel_case

